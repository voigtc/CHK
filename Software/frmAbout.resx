<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>