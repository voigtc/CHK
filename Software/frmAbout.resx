<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A2GU/7D6mvGoAAAAAElFTkSuQmCC
</value>
  </data>
</root>